<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring-mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context.xsd
                     http://mybatis.org/schema/mybatis-spring
                     https://mybatis.org/schema/mybatis-spring.xsd">

    <!--  引入外部文件  -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--  配置数据源信息  -->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- spring和mybatis整合的工厂bean -->
    <!-- 1.配置 SqlSessionFactoryBean   -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 1.1 配置数据源信息 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 1.2 配置全局配置文件位置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 1.3 给所有实体类起别名 -->
        <property name="typeAliasesPackage" value="com.example.entity"></property>
        <!-- 1.4 配置 mapper 映射文件的位置 -->
        <property name="mapperLocations">
            <array>
                <value>classpath:mapper/*.xml</value>
            </array>
        </property>
    </bean>

    <!-- 2.批量扫描接口生成代理对象 -->
    <spring-mybatis:scan base-package="com.example.dao"></spring-mybatis:scan>

</beans>